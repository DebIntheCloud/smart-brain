{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Debor\\\\Documents\\\\facerecognitionbrain\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react'; // Importing useState hook\nimport './App.css';\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Signin from \"./Components/Signin/Signin\";\nimport Register from \"./Components/Register/Register\";\nimport Logo from \"./Components/Logo/Logo\";\nimport ImageLinkForm from \"./Components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./Components/Rank/Rank\";\nimport Clarifai from 'clarifai';\nimport FaceRecognition from \"./Components/FaceRecognition/FaceRecognition\";\nimport ParticlesBg from 'particles-bg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State Management\n  const [input, setInput] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [box, setBox] = useState([]);\n  const [route, setRoute] = useState(\"Signin\");\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [user, setUser] = useState({\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\"\n  });\n\n  // Load User Data\n  const loadUser = data => {\n    setUser({\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    });\n  };\n\n  // Input Change Handler\n  const onInputChange = event => {\n    setInput(event.target.value);\n  };\n\n  // Calculate Face Bounding Box\n  const displayFaceBox = face => {\n    setBox(prevBoxes => [...prevBoxes, face]);\n  };\n\n  // Button Submit Handler\n  const onButtonSubmit = () => {\n    setImageUrl(input);\n\n    // Clarifai API call via proxy\n    fetch(\"http://localhost:3000/imageUrl\", {\n      // Call your backend endpoint\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        imageUrl: imageUrl,\n        pat: PAT,\n        userId: USER_ID,\n        appID: APP_ID\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      var _data$outputs, _data$outputs$;\n      // Validate API response\n      if (data !== null && data !== void 0 && (_data$outputs = data.outputs) !== null && _data$outputs !== void 0 && (_data$outputs$ = _data$outputs[0]) !== null && _data$outputs$ !== void 0 && _data$outputs$.regions) {\n        const clarifaiFaces = data.outputs[0].data.regions.map(region => region.region_info.bounding_box);\n        // Clear previous boxes and set new face detection boxes\n        setBox([]);\n        clarifaiFaces.forEach(displayFaceBox);\n\n        // Update user entries\n        return fetch(\"http://localhost:3000/image\", {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            id: user.id\n          })\n        });\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`Server error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(count => {\n      setUser(prevUser => ({\n        ...prevUser,\n        entries: count.entries\n      }));\n    }).catch(err => {\n      console.error(\"Error processing image:\", err);\n      alert('There was an error processing the image or updating your rank.');\n    });\n  };\n\n  // Route Change Handler\n  const changeRoute = route => {\n    if (route === \"signout\") {\n      setIsSignedIn(false);\n      setRoute(\"Signin\");\n    } else if (route === \"home\") {\n      setIsSignedIn(true);\n    }\n    setRoute(route);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n      className: \"particles\",\n      type: \"cobweb\",\n      color: \"#ffffff\",\n      num: 300,\n      bg: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n      isSignedIn: isSignedIn,\n      changeRoute: changeRoute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), route === \"home\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {\n        name: user.name,\n        entries: user.entries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: onInputChange,\n        onButtonSubmit: onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageUrl: imageUrl,\n        box: box\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this) : route === \"Signin\" ? /*#__PURE__*/_jsxDEV(Signin, {\n      changeRoute: changeRoute,\n      loadUser: loadUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Register, {\n      loadUser: loadUser,\n      changeRoute: changeRoute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0wX/olkLXxhAKMnMwFFwYzgdxGQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navigation","Signin","Register","Logo","ImageLinkForm","Rank","Clarifai","FaceRecognition","ParticlesBg","jsxDEV","_jsxDEV","App","_s","input","setInput","imageUrl","setImageUrl","box","setBox","route","setRoute","isSignedIn","setIsSignedIn","user","setUser","id","name","email","entries","joined","loadUser","data","onInputChange","event","target","value","displayFaceBox","face","prevBoxes","onButtonSubmit","fetch","method","headers","body","JSON","stringify","pat","PAT","userId","USER_ID","appID","APP_ID","then","response","ok","Error","status","json","_data$outputs","_data$outputs$","outputs","regions","clarifaiFaces","map","region","region_info","bounding_box","forEach","count","prevUser","catch","err","console","error","alert","changeRoute","className","children","type","color","num","bg","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Debor/Documents/facerecognitionbrain/src/App.js"],"sourcesContent":["import React, { useState } from 'react'; // Importing useState hook\nimport './App.css';\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Signin from \"./Components/Signin/Signin\";\nimport Register from \"./Components/Register/Register\";\nimport Logo from \"./Components/Logo/Logo\";\nimport ImageLinkForm from \"./Components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./Components/Rank/Rank\";\nimport Clarifai from 'clarifai';\nimport FaceRecognition from \"./Components/FaceRecognition/FaceRecognition\";\nimport ParticlesBg from 'particles-bg';\n\n\nfunction App() {\n  // State Management\n  const [input, setInput] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [box, setBox] = useState([]);\n  const [route, setRoute] = useState(\"Signin\");\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [user, setUser] = useState({      \n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\"\n  });\n\n // Load User Data\n  const loadUser = (data) => {\n    setUser({\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    });\n  };\n\n // Input Change Handler\n  const onInputChange = (event) => {\n    setInput(event.target.value);\n  };\n\n    // Calculate Face Bounding Box\n  const displayFaceBox = (face) => {\n    setBox(prevBoxes => [...prevBoxes, face]);\n  };\n\n  // Button Submit Handler\n  const onButtonSubmit = () => {\n    setImageUrl(input);\n\n    // Clarifai API call via proxy\n    fetch(\"http://localhost:3000/imageUrl\", {  // Call your backend endpoint\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ \n        imageUrl: imageUrl,\n        pat: PAT,\n        userId: USER_ID,\n        appID: APP_ID \n      }),\n    })\n      .then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n      }) \n      .then(data => {\n  // Validate API response\n        if (data?.outputs?.[0]?.regions) {\n          const clarifaiFaces = data.outputs[0].data.regions.map(\n            region => region.region_info.bounding_box\n          );\n   // Clear previous boxes and set new face detection boxes\n          setBox([]);\n          clarifaiFaces.forEach(displayFaceBox); \n\n  // Update user entries\n          return fetch(\"http://localhost:3000/image\", {\n            method: \"PUT\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ id: user.id }),\n          });\n        } \n      })\n      .then(response => {\n        if (!response.ok) {\n        throw new Error(`Server error! status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then(count => {\n      setUser(prevUser => ({\n      ...prevUser,\n      entries: count.entries\n    }));\n  })\n      .catch(err => {\n      console.error(\"Error processing image:\", err);\n      alert('There was an error processing the image or updating your rank.');\n    });\n  };\n\n  // Route Change Handler\n  const changeRoute = (route) => {\n    if (route === \"signout\") {\n      setIsSignedIn(false);\n      setRoute(\"Signin\");\n    } else if (route === \"home\") {\n      setIsSignedIn(true);\n    }\n    setRoute(route);\n  };\n\n\n  return (\n    <div className=\"App\">\n      <ParticlesBg className=\"particles\"\n        type=\"cobweb\"\n        color=\"#ffffff\"\n        num={300}\n        bg={true}\n      />\n      <Navigation \n      isSignedIn={isSignedIn} \n      changeRoute={changeRoute} \n      />\n      {route === \"home\" ? (\n        <div>\n            <Logo />\n            <Rank \n            name={user.name} \n            entries={user.entries} \n            />\n            <ImageLinkForm \n              onInputChange={onInputChange} \n              onButtonSubmit={onButtonSubmit} \n            />\n            <FaceRecognition \n            imageUrl={imageUrl} \n            box={box} \n            />\n          </div>\n         ) : (\n            route === \"Signin\" ? (\n          <Signin\n            changeRoute={changeRoute}\n            loadUser={loadUser}\n            />\n         ) : (\n         <Register\n            loadUser={loadUser}\n            changeRoute={changeRoute}\n          />\n        )\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}