{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Debor\\\\Documents\\\\facerecognitionbrain\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Signin from \"./Components/Signin/Signin\";\nimport Register from \"./Components/Register/Register\";\nimport Logo from \"./Components/Logo/Logo\";\nimport ImageLinkForm from \"./Components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./Components/Rank/Rank\";\nimport FaceRecognition from \"./Components/FaceRecognition/FaceRecognition\";\nimport ParticlesBg from 'particles-bg';\nimport Clarifai from \"clarifai\";\nimport { useState } from 'react'; // Importing useState hook\n\n// Clarifai API setup remains the same...\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst returnClarifaiRequestOptions = imageUrl => {\n  const PAT = 'dcb52ced76444b13be68163102a8b7fc'; // Correctly declare the PAT\n  const USER_ID = 'cu9ym2eezj7bb'; // Your Clarifai User ID\n  const APP_ID = 'Face-Recognition-Brain'; // Your Clarifai App ID\n  const MODEL_ID = 'face-detection'; // The model you're using\n\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": imageUrl // The image URL to analyze\n        }\n      }\n    }]\n  });\n  return {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT // Correctly use the PAT here\n    },\n    body: raw\n  };\n};\nfunction App() {\n  _s();\n  // State to manage the input image URL, image recognition results, and route\n  const [input, setInput] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\"); // State to store the image URL for recognition\n  const [box, setBox] = useState({}); // State to store bounding box for face detection\n  const [route, setRoute] = useState(\"Signin\"); // State to manage the current route\n  const [isSignedIn, setIsSignedIn] = useState(false); // Default value is 'false'\n\n  // Event handler for input change\n  const onInputChange = event => {\n    setInput(event.target.value); // Update state (if needed)\n  };\n\n  // This function handles the button click and API request\n  const onButtonSubmit = () => {\n    console.log(\"Input URL:\", input);\n    setImageUrl(input); // Update the imageUrl state\n\n    // Clarifai API call\n    fetch(\"https://api.clarifai.com/v2/models/\" + \"face-detection\" + \"/outputs\", returnClarifaiRequestOptions(input)).then(response => response.json()).then(data => {\n      if (data.outputs && data.outputs[0].data.regions) {\n        const clarifaiFaces = data.outputs[0].data.regions.map(region => {\n          return region.region_info.bounding_box;\n        });\n        clarifaiFaces.forEach((face, index) => {\n          displayFaceBox(face, index);\n        });\n      }\n    }).catch(err => console.log(err)); // Catch any errors\n  };\n\n  // Function to calculate the bounding box\n  const displayFaceBox = (face, index) => {\n    setBox(prevBoxes => [...prevBoxes, face]); // Append new boxes to the array\n  };\n\n  // Function to change the route (e.g., from Signin to Home)\n  const changeRoute = route => {\n    if (route === \"signout\") {\n      setIsSignedIn(false);\n      setRoute(\"Signin\");\n    } else if (route === \"home\") {\n      setIsSignedIn(true);\n    }\n    setRoute(route); // Update the route state\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n      className: \"particles\",\n      type: \"cobweb\",\n      color: \"#ffffff\",\n      num: 300,\n      bg: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n      isSignedIn: isSignedIn,\n      changeRoute: changeRoute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), route === \"home\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: onInputChange,\n        onButtonSubmit: onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageUrl: imageUrl,\n        box: box\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }, this) : route === \"Signin\" ? /*#__PURE__*/_jsxDEV(Signin, {\n      changeRoute: changeRoute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(Register, {\n      changeRoute: changeRoute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zeQFkRPSGBIvITrPNQw79Te4Ei0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navigation","Signin","Register","Logo","ImageLinkForm","Rank","FaceRecognition","ParticlesBg","Clarifai","useState","jsxDEV","_jsxDEV","returnClarifaiRequestOptions","imageUrl","PAT","USER_ID","APP_ID","MODEL_ID","raw","JSON","stringify","method","headers","body","App","_s","input","setInput","setImageUrl","box","setBox","route","setRoute","isSignedIn","setIsSignedIn","onInputChange","event","target","value","onButtonSubmit","console","log","fetch","then","response","json","data","outputs","regions","clarifaiFaces","map","region","region_info","bounding_box","forEach","face","index","displayFaceBox","catch","err","prevBoxes","changeRoute","className","children","type","color","num","bg","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Debor/Documents/facerecognitionbrain/src/App.js"],"sourcesContent":["import './App.css';\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Signin from \"./Components/Signin/Signin\";\nimport Register from \"./Components/Register/Register\";\nimport Logo from \"./Components/Logo/Logo\";\nimport ImageLinkForm from \"./Components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./Components/Rank/Rank\";\nimport FaceRecognition from \"./Components/FaceRecognition/FaceRecognition\";\nimport ParticlesBg from 'particles-bg';\nimport Clarifai from \"clarifai\";\nimport { useState } from 'react'; // Importing useState hook\n\n// Clarifai API setup remains the same...\nconst returnClarifaiRequestOptions = (imageUrl) => {\n  const PAT = 'dcb52ced76444b13be68163102a8b7fc'; // Correctly declare the PAT\n  const USER_ID = 'cu9ym2eezj7bb'; // Your Clarifai User ID\n  const APP_ID = 'Face-Recognition-Brain'; // Your Clarifai App ID\n  const MODEL_ID = 'face-detection'; // The model you're using\n\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [\n      {\n        \"data\": {\n          \"image\": {\n            \"url\": imageUrl // The image URL to analyze\n          }\n        }\n      }\n    ]\n  });\n\n  return {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT // Correctly use the PAT here\n    },\n    body: raw\n  };\n};\n\nfunction App() {\n   // State to manage the input image URL, image recognition results, and route\n  const [input, setInput] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\"); // State to store the image URL for recognition\n  const [box, setBox] = useState({}); // State to store bounding box for face detection\n  const [route, setRoute] = useState(\"Signin\"); // State to manage the current route\n  const [isSignedIn, setIsSignedIn] = useState(false); // Default value is 'false'\n\n\n  // Event handler for input change\n  const onInputChange = (event) => {\n    setInput(event.target.value); // Update state (if needed)\n  };\n\n  // This function handles the button click and API request\n  const onButtonSubmit = () => {\n    console.log(\"Input URL:\", input);\n    setImageUrl(input); // Update the imageUrl state\n\n    // Clarifai API call\n    fetch(\"https://api.clarifai.com/v2/models/\" + \"face-detection\" + \"/outputs\", returnClarifaiRequestOptions(input))\n      .then(response => response.json())\n      .then(data => {\n        if (data.outputs && data.outputs[0].data.regions) {\n          const clarifaiFaces = data.outputs[0].data.regions.map(region => {\n            return region.region_info.bounding_box;\n          });\n          clarifaiFaces.forEach((face, index) => {\n            displayFaceBox(face, index);\n          });\n        }\n      })\n      .catch(err => console.log(err)); // Catch any errors\n  };\n\n  // Function to calculate the bounding box\n  const displayFaceBox = (face, index) => {\n  setBox(prevBoxes => [...prevBoxes, face]); // Append new boxes to the array\n};\n\n\n  // Function to change the route (e.g., from Signin to Home)\n  const changeRoute = (route) => {\n    if (route === \"signout\") {\n      setIsSignedIn(false);\n      setRoute(\"Signin\");\n    } else if (route === \"home\") {\n      setIsSignedIn(true);\n    }\n    setRoute(route); // Update the route state\n  };\n\n  return (\n    <div className=\"App\">\n      <ParticlesBg className=\"particles\"\n        type=\"cobweb\"\n        color=\"#ffffff\"\n        num={300}\n        bg={true}\n      ></ParticlesBg>\n      <Navigation isSignedIn={isSignedIn} changeRoute={changeRoute} />\n      {route === \"home\"  \n        ? <div>\n            <Logo />\n            <Rank />\n            <ImageLinkForm \n              onInputChange={onInputChange} \n              onButtonSubmit={onButtonSubmit} \n            />\n            <FaceRecognition imageUrl={imageUrl} box={box} />\n          </div>\n          : (\n            route === \"Signin\"\n            ? <Signin changeRoute={changeRoute}/>\n            : <Register changeRoute={changeRoute}/>\n            )\n      }\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}