{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Debor\\\\Documents\\\\facerecognitionbrain\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Signin from \"./Components/Signin/Signin\";\nimport Register from \"./Components/Register/Register\";\nimport Logo from \"./Components/Logo/Logo\";\nimport ImageLinkForm from \"./Components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./Components/Rank/Rank\";\nimport FaceRecognition from \"./Components/FaceRecognition/FaceRecognition\";\nimport ParticlesBg from 'particles-bg';\nimport Clarifai from \"clarifai\";\nimport React, { useState, useEffect } from 'react'; // Importing useState hook\n\n// Clarifai API setup remains the same...\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst returnClarifaiRequestOptions = imageUrl => {\n  const PAT = 'dcb52ced76444b13be68163102a8b7fc'; // Correctly declare the PAT\n  const USER_ID = 'cu9ym2eezj7bb'; // Your Clarifai User ID\n  const APP_ID = 'Face-Recognition-Brain'; // Your Clarifai App ID\n  const MODEL_ID = 'face-detection'; // The model you're using\n\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": imageUrl // The image URL to analyze\n        }\n      }\n    }]\n  });\n  return {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT // Correctly use the PAT here\n    },\n    body: raw\n  };\n};\nfunction App() {\n  _s();\n  // State to manage the input image URL, image recognition results, and route\n  const [input, setInput] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\"); // State to store the image URL for recognition\n  const [box, setBox] = useState({}); // State to store bounding box for face detection\n  const [route, setRoute] = useState(\"Signin\"); // State to manage the current route\n  const [isSignedIn, setIsSignedIn] = useState(false); // Default value is 'false'\n  const [user, setUser] = useState({\n    id: \"\",\n    name: \"\",\n    email: \"\",\n    entries: 0,\n    joined: \"\"\n  });\n  const loadUser = data => {\n    setUser({\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    });\n  };\n\n  // Event handler for input change\n  const onInputChange = event => {\n    setInput(event.target.value); // Update state (if needed)\n  };\n  const onButtonSubmit = () => {\n    console.log(\"Input URL:\", input);\n    setImageUrl(input); // Update the imageUrl state\n\n    // Clarifai API call\n    fetch(\"https://api.clarifai.com/v2/models/face-detection/outputs\", returnClarifaiRequestOptions(input)).then(response => {\n      if (!response.ok) {\n        throw new Error(`Clarifai API error: ${response.status}`);\n      }\n      return response.json(); // Parse the Clarifai response\n    }).then(data => {\n      if (data.outputs && data.outputs[0].data.regions) {\n        const clarifaiFaces = data.outputs[0].data.regions.map(region => {\n          return region.region_info.bounding_box;\n        });\n\n        // Display bounding boxes\n        clarifaiFaces.forEach((face, index) => {\n          displayFaceBox(face, index);\n        });\n\n        // Update user rank on the server\n        return fetch(\"http://localhost:3000/image\", {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            id: user.id // Assuming `user` is accessible in this scope\n          })\n        });\n      } else {\n        console.log(\"No faces detected in the image.\");\n        return null; // Stop further execution if no faces are detected\n      }\n    }).then(response => {\n      if (response && !response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n      return response ? response.json() : null; // Handle case where there's no server response\n    }).then(count => {\n      if (count) {\n        // Update user's entries (assuming functional component with useState)\n        setUser(prevUser => ({\n          ...prevUser,\n          entries: count.entries // Adjust based on your server response structure\n        }));\n        console.log(\"Rank updated successfully:\", count);\n      }\n    }).catch(err => console.error(\"Error:\", err)); // Catch and log errors\n  };\n  fetch(\"http://localhost:3000/clarifai\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      imageUrl: input\n    })\n  }).then(response => response.json()).then(data => {\n    // Process the Clarifai response\n    console.log(\"Clarifai Response:\", data);\n  }).catch(err => console.error(\"Error:\", err));\n\n  // Function to calculate the bounding box\n  const displayFaceBox = (face, index) => {\n    setBox(prevBoxes => [...prevBoxes, face]); // Append new boxes to the array\n  };\n\n  // Function to change the route (e.g., from Signin to Home)\n  const changeRoute = route => {\n    console.log(\"Changing route:\", route); // Debugging line\n    if (route === \"signout\") {\n      setIsSignedIn(false);\n      setRoute(\"Signin\");\n    } else if (route === \"home\") {\n      setIsSignedIn(true);\n    }\n    setRoute(route); // Update the route state\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n      className: \"particles\",\n      type: \"cobweb\",\n      color: \"#ffffff\",\n      num: 300,\n      bg: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n      isSignedIn: isSignedIn,\n      changeRoute: changeRoute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), route === \"home\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {\n        name: user.name,\n        entries: user.entries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: onInputChange,\n        onButtonSubmit: onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageUrl: imageUrl,\n        box: box\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }, this) : route === \"Signin\" ? /*#__PURE__*/_jsxDEV(Signin, {\n      changeRoute: changeRoute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(Register, {\n      loadUser: loadUser,\n      changeRoute: changeRoute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Hpa+CXtnok+DWip/FgLNWrplU3A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navigation","Signin","Register","Logo","ImageLinkForm","Rank","FaceRecognition","ParticlesBg","Clarifai","React","useState","useEffect","jsxDEV","_jsxDEV","returnClarifaiRequestOptions","imageUrl","PAT","USER_ID","APP_ID","MODEL_ID","raw","JSON","stringify","method","headers","body","App","_s","input","setInput","setImageUrl","box","setBox","route","setRoute","isSignedIn","setIsSignedIn","user","setUser","id","name","email","entries","joined","loadUser","data","onInputChange","event","target","value","onButtonSubmit","console","log","fetch","then","response","ok","Error","status","json","outputs","regions","clarifaiFaces","map","region","region_info","bounding_box","forEach","face","index","displayFaceBox","count","prevUser","catch","err","error","prevBoxes","changeRoute","className","children","type","color","num","bg","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Debor/Documents/facerecognitionbrain/src/App.js"],"sourcesContent":["import './App.css';\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Signin from \"./Components/Signin/Signin\";\nimport Register from \"./Components/Register/Register\";\nimport Logo from \"./Components/Logo/Logo\";\nimport ImageLinkForm from \"./Components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./Components/Rank/Rank\";\nimport FaceRecognition from \"./Components/FaceRecognition/FaceRecognition\";\nimport ParticlesBg from 'particles-bg';\nimport Clarifai from \"clarifai\";\nimport React, { useState, useEffect } from 'react'; // Importing useState hook\n\n// Clarifai API setup remains the same...\nconst returnClarifaiRequestOptions = (imageUrl) => {\n  const PAT = 'dcb52ced76444b13be68163102a8b7fc'; // Correctly declare the PAT\n  const USER_ID = 'cu9ym2eezj7bb'; // Your Clarifai User ID\n  const APP_ID = 'Face-Recognition-Brain'; // Your Clarifai App ID\n  const MODEL_ID = 'face-detection'; // The model you're using\n\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [\n      {\n        \"data\": {\n          \"image\": {\n            \"url\": imageUrl // The image URL to analyze\n          }\n        }\n      }\n    ]\n  });\n\n  return {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT // Correctly use the PAT here\n    },\n    body: raw\n  };\n};\n\nfunction App() {\n   // State to manage the input image URL, image recognition results, and route\n  const [input, setInput] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\"); // State to store the image URL for recognition\n  const [box, setBox] = useState({}); // State to store bounding box for face detection\n  const [route, setRoute] = useState(\"Signin\"); // State to manage the current route\n  const [isSignedIn, setIsSignedIn] = useState(false); // Default value is 'false'\n  const [user, setUser] = useState({      \n      id: \"\",\n      name: \"\",\n      email: \"\",\n      entries: 0,\n      joined: \"\"\n    })\n\n  const loadUser = (data) => {\n  setUser({\n    id: data.id,\n    name: data.name,\n    email: data.email,\n    entries: data.entries,\n    joined: data.joined\n  });\n};\n\n\n  // Event handler for input change\n  const onInputChange = (event) => {\n    setInput(event.target.value); // Update state (if needed)\n  };\n\n const onButtonSubmit = () => {\n  console.log(\"Input URL:\", input);\n  setImageUrl(input); // Update the imageUrl state\n\n  // Clarifai API call\n  fetch(\n    \"https://api.clarifai.com/v2/models/face-detection/outputs\",\n    returnClarifaiRequestOptions(input)\n  )\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`Clarifai API error: ${response.status}`);\n      }\n      return response.json(); // Parse the Clarifai response\n    })\n    .then(data => {\n      if (data.outputs && data.outputs[0].data.regions) {\n        const clarifaiFaces = data.outputs[0].data.regions.map(region => {\n          return region.region_info.bounding_box;\n        });\n\n        // Display bounding boxes\n        clarifaiFaces.forEach((face, index) => {\n          displayFaceBox(face, index);\n        });\n\n        // Update user rank on the server\n        return fetch(\"http://localhost:3000/image\", {\n          method: \"PUT\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            id: user.id, // Assuming `user` is accessible in this scope\n          }),\n        });\n      } else {\n        console.log(\"No faces detected in the image.\");\n        return null; // Stop further execution if no faces are detected\n      }\n    })\n    .then(response => {\n      if (response && !response.ok) {\n        throw new Error(`Server error: ${response.status}`);\n      }\n      return response ? response.json() : null; // Handle case where there's no server response\n    })\n    .then(count => {\n      if (count) {\n        // Update user's entries (assuming functional component with useState)\n        setUser(prevUser => ({\n          ...prevUser,\n          entries: count.entries, // Adjust based on your server response structure\n        }));\n        console.log(\"Rank updated successfully:\", count);\n      }\n    })\n    .catch(err => console.error(\"Error:\", err)); // Catch and log errors\n};\n\nfetch(\"http://localhost:3000/clarifai\", {\n  method: \"POST\",\n  headers: { \"Content-Type\": \"application/json\" },\n  body: JSON.stringify({ imageUrl: input }),\n})\n  .then(response => response.json())\n  .then(data => {\n    // Process the Clarifai response\n    console.log(\"Clarifai Response:\", data);\n  })\n  .catch(err => console.error(\"Error:\", err));\n\n  // Function to calculate the bounding box\n  const displayFaceBox = (face, index) => {\n  setBox(prevBoxes => [...prevBoxes, face]); // Append new boxes to the array\n};\n\n\n  // Function to change the route (e.g., from Signin to Home)\n  const changeRoute = (route) => {\n    console.log(\"Changing route:\", route);  // Debugging line\n    if (route === \"signout\") {\n      setIsSignedIn(false);\n      setRoute(\"Signin\");\n    } else if (route === \"home\") {\n      setIsSignedIn(true);\n    }\n    setRoute(route); // Update the route state\n  };\n\n  return (\n    <div className=\"App\">\n      <ParticlesBg className=\"particles\"\n        type=\"cobweb\"\n        color=\"#ffffff\"\n        num={300}\n        bg={true}\n      ></ParticlesBg>\n      <Navigation isSignedIn={isSignedIn} changeRoute={changeRoute} />\n      {route === \"home\"  \n        ? <div>\n            <Logo />\n            <Rank name={user.name} entries={user.entries} />\n            <ImageLinkForm \n              onInputChange={onInputChange} \n              onButtonSubmit={onButtonSubmit} \n            />\n            <FaceRecognition imageUrl={imageUrl} box={box} />\n          </div>\n          : (\n            route === \"Signin\"\n            ? <Signin changeRoute={changeRoute}/>\n            : <Register loadUser={loadUser} changeRoute={changeRoute}/>\n            )\n      }\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}