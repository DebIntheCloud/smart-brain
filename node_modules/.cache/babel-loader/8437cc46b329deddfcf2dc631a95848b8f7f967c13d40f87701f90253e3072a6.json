{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Debor\\\\Documents\\\\facerecognitionbrain\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Logo from \"./Components/Logo/Logo\";\nimport ImageLinkForm from \"./Components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./Components/Rank/Rank\";\nimport FaceRecognition from \"./Components/FaceRecognition/FaceRecognition\";\nimport ParticlesBg from 'particles-bg';\nimport Clarifai from \"clarifai\";\nimport { useState } from 'react'; // Importing useState hook\n\n// Remove the Clarifai App instance if you're not using it\n// const app = new Clarifai.App({\n// apiKey: \"3635be799be94ec19a8434b00959ec43\" // Ensure this is a valid key\n// });\n\n// Your PAT (Personal Access Token) can be found in the Account's Security section\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst returnClarifaiRequestOptions = imageUrl => {\n  const PAT = 'dcb52ced76444b13be68163102a8b7fc';\n  const USER_ID = 'cu9ym2eezj7bb';\n  const APP_ID = 'Face-Recognition-Brain';\n  // // Change these to whatever model and image URL you want to use\n  const MODEL_ID = 'face-detection';\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": imageUrl\n          // \"base64\": IMAGE_BYTES_STRING\n        }\n      }\n    }]\n  });\n  return {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n};\nfunction App() {\n  _s();\n  // State to manage the input image URL and image recognition results\n  const [input, setInput] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\"); // State to store the image URL for recognition\n  const [box, setBox] = useState({}); // State to store bounding box for face detection\n\n  // Event handler for input change\n  const onInputChange = event => {\n    setInput(event.target.value); // Update state (if needed)\n  };\n\n  // This function handles the button click and API request\n  const onButtonSubmit = () => {\n    console.log(\"Input URL:\", input);\n    setImageUrl(input); // Update the imageUrl state\n\n    // Clarifai API call  \n    fetch(\"https://api.clarifai.com/v2/models/\" + \"face-detection\" + \"/outputs\", returnClarifaiRequestOptions(input)).then(response => response.json()).then(data => {\n      if (data.outputs && data.outputs[0].data.regions) {\n        // Get the bounding box details from the API response\n        const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n        displayFaceBox(clarifaiFace); // Update the state with the face bounding box\n      }\n    }).catch(err => console.log(err)); // Catch any errors\n  };\n\n  // Function to calculate the bounding box\n  const displayFaceBox = box => {\n    setBox(box); // Set the bounding box to state\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n      className: \"particles\",\n      type: \"cobweb\",\n      color: \"#ffffff\",\n      num: 300,\n      bg: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n      onInputChange: onInputChange,\n      onButtonSubmit: onButtonSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n      imageUrl: imageUrl,\n      box: box\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NbVF/qyMJ7AtxjTLqey+8+u7GW0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","ParticlesBg","Clarifai","useState","jsxDEV","_jsxDEV","returnClarifaiRequestOptions","imageUrl","PAT","USER_ID","APP_ID","MODEL_ID","raw","JSON","stringify","method","headers","body","App","_s","input","setInput","setImageUrl","box","setBox","onInputChange","event","target","value","onButtonSubmit","console","log","fetch","then","response","json","data","outputs","regions","clarifaiFace","region_info","bounding_box","displayFaceBox","catch","err","className","children","type","color","num","bg","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Debor/Documents/facerecognitionbrain/src/App.js"],"sourcesContent":["import './App.css';\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Logo from \"./Components/Logo/Logo\";\nimport ImageLinkForm from \"./Components/ImageLinkForm/ImageLinkForm\";\nimport Rank from \"./Components/Rank/Rank\";\nimport FaceRecognition from \"./Components/FaceRecognition/FaceRecognition\";\nimport ParticlesBg from 'particles-bg';\nimport Clarifai from \"clarifai\";\nimport { useState } from 'react'; // Importing useState hook\n\n// Remove the Clarifai App instance if you're not using it\n// const app = new Clarifai.App({\n// apiKey: \"3635be799be94ec19a8434b00959ec43\" // Ensure this is a valid key\n// });\n\n// Your PAT (Personal Access Token) can be found in the Account's Security section\nconst returnClarifaiRequestOptions = (imageUrl) => {\n  const PAT = 'dcb52ced76444b13be68163102a8b7fc';\n  const USER_ID = 'cu9ym2eezj7bb';\n  const APP_ID = 'Face-Recognition-Brain';\n  // // Change these to whatever model and image URL you want to use\n  const MODEL_ID = 'face-detection';\n\n\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n        \"user_id\": USER_ID,\n        \"app_id\": APP_ID\n    },\n    \"inputs\": [\n        {\n            \"data\": {\n                \"image\": {\n                    \"url\": imageUrl\n                    // \"base64\": IMAGE_BYTES_STRING\n                }\n            }\n        }\n    ]\n});\n\nreturn {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n   },\n   body: raw\n  };\n}\n\n\nfunction App() {\n   // State to manage the input image URL and image recognition results\n  const [input, setInput] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\"); // State to store the image URL for recognition\n  const [box, setBox] = useState({}); // State to store bounding box for face detection\n\n  // Event handler for input change\n  const onInputChange = (event) => {\n    setInput(event.target.value); // Update state (if needed)\n  };\n\n  // This function handles the button click and API request\n  const onButtonSubmit = () => {\n    console.log(\"Input URL:\", input);\n    setImageUrl(input); // Update the imageUrl state\n\n\n// Clarifai API call  \n  fetch(\"https://api.clarifai.com/v2/models/\" + \"face-detection\" + \"/outputs\", returnClarifaiRequestOptions(input))\n    .then(response => response.json())\n    .then(data => {\n      if (data.outputs && data.outputs[0].data.regions) {\n        // Get the bounding box details from the API response\n          const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n          displayFaceBox(clarifaiFace); // Update the state with the face bounding box\n         }\n    })\n    .catch(err => console.log(err)); // Catch any errors\n};\n\n// Function to calculate the bounding box\nconst displayFaceBox = (box) => {\n  setBox(box); // Set the bounding box to state\n};\n\n  return (\n    <div className=\"App\">\n    <ParticlesBg className=\"particles\"\n        type=\"cobweb\"\n        color=\"#ffffff\"\n        num={300}\n        bg={true}\n      ></ParticlesBg>\n    <Navigation/>\n    <Logo/>\n    <Rank/>\n    <ImageLinkForm \n    onInputChange={onInputChange} \n    onButtonSubmit={onButtonSubmit} \n    />\n    <FaceRecognition imageUrl={imageUrl} box={box} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}